{
  "contractName": "SINManager",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x715018a6"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8f32d59b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xb2bdfa7b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isManager",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc56a3e88"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_manager",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xf0329f6b"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event",
      "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "SIN",
          "type": "string"
        },
        {
          "name": "credit",
          "type": "bool"
        }
      ],
      "name": "updateCredit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xc81c8d87"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "SIN",
          "type": "string"
        }
      ],
      "name": "getCredit",
      "outputs": [
        {
          "name": "credit",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf7522cba"
    }
  ],
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610873806101106000396000f3fe608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063715018a61461009e5780638da5cb5b146100b55780638f32d59b1461010c578063b2bdfa7b1461013b578063c56a3e8814610192578063c81c8d87146101c1578063f0329f6b14610295578063f2fde38b146102ec578063f7522cba1461033d575b600080fd5b3480156100aa57600080fd5b506100b361041d565b005b3480156100c157600080fd5b506100ca6104ef565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011857600080fd5b50610121610518565b604051808215151515815260200191505060405180910390f35b34801561014757600080fd5b5061015061056f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019e57600080fd5b506101a7610594565b604051808215151515815260200191505060405180910390f35b3480156101cd57600080fd5b50610293600480360360408110156101e457600080fd5b810190808035906020019064010000000081111561020157600080fd5b82018360208201111561021357600080fd5b8035906020019184600183028401116401000000008311171561023557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035151590602001909291905050506105ec565b005b3480156102a157600080fd5b506102aa610686565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102f857600080fd5b5061033b6004803603602081101561030f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106ac565b005b34801561034957600080fd5b506104036004803603602081101561036057600080fd5b810190808035906020019064010000000081111561037d57600080fd5b82018360208201111561038f57600080fd5b803590602001918460018302840111640100000000831117156103b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506106cb565b604051808215151515815260200191505060405180910390f35b610425610518565b151561043057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6105f4610518565b15156105ff57600080fd5b806002836040518082805190602001908083835b6020831015156106385780518252602082019150602081019050602083039250610613565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff0219169083151502179055505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106b4610518565b15156106bf57600080fd5b6106c88161074d565b50565b60006002826040518082805190602001908083835b60208310151561070557805182526020820191506020810190506020830392506106e0565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561078957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a723058206780fd698335b7e7368ea5f7b6f4ba4ae3780c68b1bd40ab59f8f36508ae08cd0029",
  "deployedBytecode": "0x608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063715018a61461009e5780638da5cb5b146100b55780638f32d59b1461010c578063b2bdfa7b1461013b578063c56a3e8814610192578063c81c8d87146101c1578063f0329f6b14610295578063f2fde38b146102ec578063f7522cba1461033d575b600080fd5b3480156100aa57600080fd5b506100b361041d565b005b3480156100c157600080fd5b506100ca6104ef565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011857600080fd5b50610121610518565b604051808215151515815260200191505060405180910390f35b34801561014757600080fd5b5061015061056f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019e57600080fd5b506101a7610594565b604051808215151515815260200191505060405180910390f35b3480156101cd57600080fd5b50610293600480360360408110156101e457600080fd5b810190808035906020019064010000000081111561020157600080fd5b82018360208201111561021357600080fd5b8035906020019184600183028401116401000000008311171561023557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035151590602001909291905050506105ec565b005b3480156102a157600080fd5b506102aa610686565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102f857600080fd5b5061033b6004803603602081101561030f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106ac565b005b34801561034957600080fd5b506104036004803603602081101561036057600080fd5b810190808035906020019064010000000081111561037d57600080fd5b82018360208201111561038f57600080fd5b803590602001918460018302840111640100000000831117156103b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506106cb565b604051808215151515815260200191505060405180910390f35b610425610518565b151561043057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6105f4610518565b15156105ff57600080fd5b806002836040518082805190602001908083835b6020831015156106385780518252602082019150602081019050602083039250610613565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff0219169083151502179055505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106b4610518565b15156106bf57600080fd5b6106c88161074d565b50565b60006002826040518082805190602001908083835b60208310151561070557805182526020820191506020810190506020830392506106e0565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561078957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a723058206780fd698335b7e7368ea5f7b6f4ba4ae3780c68b1bd40ab59f8f36508ae08cd0029",
  "sourceMap": "145:318:3:-;;;555:10:8;546:6;;:19;;;;;;;;;;;;;;;;;;583:10;572:8;;:21;;;;;;;;;;;;;;;;;;638:6;;;;;;;;;;;605:40;;634:1;605:40;;;;;;;;;;;;145:318:3;;;;;;",
  "deployedSourceMap": "145:318:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1520:130:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1520:130:8;;;;;;709:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;709:72:8;;;;;;;;;;;;;;;;;;;;;;;;;;;1075:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1075:85:8;;;;;;;;;;;;;;;;;;;;;;;;;;;240:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;240:21:8;;;;;;;;;;;;;;;;;;;;;;;;;;;1164:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1164:89:8;;;;;;;;;;;;;;;;;;;;;;;;;;;231:116:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;231:116:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;231:116:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;231:116:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;231:116:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;231:116:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;231:116:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;266:23:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;266:23:8;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1814:103:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1814:103:8;;;;;;;;;;;;;;;;;;;;;;353:107:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;353:107:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;353:107:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;353:107:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;353:107:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;353:107:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;353:107:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1520:130:8;900:9;:7;:9::i;:::-;892:18;;;;;;;;1615:1;1578:40;;1599:6;;;;;;;;;;;1578:40;;;;;;;;;;;;1642:1;1625:6;;:19;;;;;;;;;;;;;;;;;;1520:130::o;709:72::-;746:7;769:6;;;;;;;;;;;762:13;;709:72;:::o;1075:85::-;1114:4;1148:6;;;;;;;;;;;1134:20;;:10;:20;;;1127:27;;1075:85;:::o;240:21::-;;;;;;;;;;;;;:::o;1164:89::-;1205:4;1239:8;;;;;;;;;;;1225:22;;:10;:22;;;1218:29;;1164:89;:::o;231:116:3:-;900:9:8;:7;:9::i;:::-;892:18;;;;;;;;333:6:3;314:11;326:3;314:16;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;314:16:3;;;;;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;231:116;;:::o;266:23:8:-;;;;;;;;;;;;;:::o;1814:103::-;900:9;:7;:9::i;:::-;892:18;;;;;;;;1883:28;1902:8;1883:18;:28::i;:::-;1814:103;:::o;353:107:3:-;406:11;436;448:3;436:16;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;436:16:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;429:23;;353:107;;;:::o;2054:173:8:-;2144:1;2124:22;;:8;:22;;;;2116:31;;;;;;;;2188:8;2159:38;;2180:6;;;;;;;;;;;2159:38;;;;;;;;;;;;2213:8;2204:6;;:17;;;;;;;;;;;;;;;;;;2054:173;:::o",
  "source": "pragma solidity ^0.5.0;\r\nimport './Zeppelin/ownership/Ownable.sol';\r\n\r\n// TODO\r\n// only manager ethereum account have access of this contract\r\n\r\ncontract SINManager is Ownable{\r\n\tmapping (string => bool) private SINToCredit; \r\n    function updateCredit(string memory SIN, bool credit) public onlyOwner{  \r\n        SINToCredit[SIN] = credit;\r\n    }\r\n    function getCredit(string memory SIN) public returns(bool credit){\r\n        return SINToCredit[SIN];\r\n    }\r\n}",
  "sourcePath": "D:/BlockChain Proj/idworld-truffle/contracts/SINManager.sol",
  "ast": {
    "absolutePath": "/D/BlockChain Proj/idworld-truffle/contracts/SINManager.sol",
    "exportedSymbols": {
      "SINManager": [
        419
      ]
    },
    "id": 420,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 383,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/D/BlockChain Proj/idworld-truffle/contracts/Zeppelin/ownership/Ownable.sol",
        "file": "./Zeppelin/ownership/Ownable.sol",
        "id": 384,
        "nodeType": "ImportDirective",
        "scope": 420,
        "sourceUnit": 1354,
        "src": "25:42:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 385,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1353,
              "src": "168:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1353",
                "typeString": "contract Ownable"
              }
            },
            "id": 386,
            "nodeType": "InheritanceSpecifier",
            "src": "168:7:3"
          }
        ],
        "contractDependencies": [
          1353
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 419,
        "linearizedBaseContracts": [
          419,
          1353
        ],
        "name": "SINManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 390,
            "name": "SINToCredit",
            "nodeType": "VariableDeclaration",
            "scope": 419,
            "src": "179:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 389,
              "keyType": {
                "id": 387,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "188:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "179:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 388,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "198:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 405,
              "nodeType": "Block",
              "src": "301:46:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 399,
                        "name": "SINToCredit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "314:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 401,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 400,
                        "name": "SIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "326:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "314:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 402,
                      "name": "credit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "333:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "314:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "314:25:3"
                }
              ]
            },
            "documentation": null,
            "id": 406,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 397,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 396,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1267,
                  "src": "292:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "292:9:3"
              }
            ],
            "name": "updateCredit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 392,
                  "name": "SIN",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "253:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 394,
                  "name": "credit",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "272:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "272:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "252:32:3"
            },
            "returnParameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:0:3"
            },
            "scope": 419,
            "src": "231:116:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 417,
              "nodeType": "Block",
              "src": "418:42:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 413,
                      "name": "SINToCredit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "436:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                        "typeString": "mapping(string memory => bool)"
                      }
                    },
                    "id": 415,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 414,
                      "name": "SIN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "448:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "436:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 412,
                  "id": 416,
                  "nodeType": "Return",
                  "src": "429:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCredit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "name": "SIN",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "372:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "371:19:3"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 411,
                  "name": "credit",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "406:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "405:13:3"
            },
            "scope": 419,
            "src": "353:107:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 420,
        "src": "145:318:3"
      }
    ],
    "src": "0:463:3"
  },
  "legacyAST": {
    "absolutePath": "/D/BlockChain Proj/idworld-truffle/contracts/SINManager.sol",
    "exportedSymbols": {
      "SINManager": [
        419
      ]
    },
    "id": 420,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 383,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/D/BlockChain Proj/idworld-truffle/contracts/Zeppelin/ownership/Ownable.sol",
        "file": "./Zeppelin/ownership/Ownable.sol",
        "id": 384,
        "nodeType": "ImportDirective",
        "scope": 420,
        "sourceUnit": 1354,
        "src": "25:42:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 385,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1353,
              "src": "168:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1353",
                "typeString": "contract Ownable"
              }
            },
            "id": 386,
            "nodeType": "InheritanceSpecifier",
            "src": "168:7:3"
          }
        ],
        "contractDependencies": [
          1353
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 419,
        "linearizedBaseContracts": [
          419,
          1353
        ],
        "name": "SINManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 390,
            "name": "SINToCredit",
            "nodeType": "VariableDeclaration",
            "scope": 419,
            "src": "179:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 389,
              "keyType": {
                "id": 387,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "188:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "179:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 388,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "198:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 405,
              "nodeType": "Block",
              "src": "301:46:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 399,
                        "name": "SINToCredit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "314:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 401,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 400,
                        "name": "SIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "326:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "314:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 402,
                      "name": "credit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "333:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "314:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "314:25:3"
                }
              ]
            },
            "documentation": null,
            "id": 406,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 397,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 396,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1267,
                  "src": "292:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "292:9:3"
              }
            ],
            "name": "updateCredit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 392,
                  "name": "SIN",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "253:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 394,
                  "name": "credit",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "272:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "272:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "252:32:3"
            },
            "returnParameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:0:3"
            },
            "scope": 419,
            "src": "231:116:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 417,
              "nodeType": "Block",
              "src": "418:42:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 413,
                      "name": "SINToCredit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "436:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                        "typeString": "mapping(string memory => bool)"
                      }
                    },
                    "id": 415,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 414,
                      "name": "SIN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "448:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "436:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 412,
                  "id": 416,
                  "nodeType": "Return",
                  "src": "429:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCredit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "name": "SIN",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "372:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "371:19:3"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 411,
                  "name": "credit",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "406:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "405:13:3"
            },
            "scope": 419,
            "src": "353:107:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 420,
        "src": "145:318:3"
      }
    ],
    "src": "0:463:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x3C897E91a01Ba83475dfa7465c4a2175feF34d44",
      "transactionHash": "0x0cbd2e6d983f90f1d566cb631b8c48767ef24a1386ce3233b942a9e06c21bf9b"
    }
  },
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-03-16T16:12:32.224Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract.\r"
      },
      "owner()": {
        "return": "the address of the owner.\r"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.\r"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
        "params": {
          "newOwner": "The address to transfer ownership to.\r"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner.\r It will not be possible to call the functions with the `onlyOwner`\r modifier anymore.\r"
      }
    }
  }
}